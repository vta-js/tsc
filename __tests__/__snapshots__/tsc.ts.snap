// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tsc node-4.0.0 1`] = `
"\\"use strict\\";

var _interopRequireDefault = require(\\"@babel/runtime/helpers/interopRequireDefault\\");

require(\\"core-js/modules/es.array.slice\\");

require(\\"core-js/modules/es.object.to-string\\");

require(\\"core-js/modules/es.promise\\");

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.default = copyFiles;

var _regenerator = _interopRequireDefault(require(\\"@babel/runtime/regenerator\\"));

require(\\"regenerator-runtime/runtime\\");

var _asyncToGenerator2 = _interopRequireDefault(require(\\"@babel/runtime/helpers/asyncToGenerator\\"));

var _slicedToArray2 = _interopRequireDefault(require(\\"@babel/runtime/helpers/slicedToArray\\"));

var _path = _interopRequireDefault(require(\\"path\\"));

var _fsExtra = _interopRequireDefault(require(\\"fs-extra\\"));

var _filteFiles = _interopRequireDefault(require(\\"./filteFiles\\"));

function copyFilesOneByOne(from, dest, files) {
  if (files.length > 0) {
    var _files = (0, _slicedToArray2.default)(files, 1),
        file = _files[0];

    var destFile = _path.default.resolve(dest, file);

    return _fsExtra.default.ensureDir(_path.default.dirname(destFile)).then(function () {
      return _fsExtra.default.copyFile(_path.default.resolve(from, file), destFile);
    }).then(function () {
      return copyFilesOneByOne(from, dest, files.slice(1));
    });
  }

  return Promise.resolve();
}

function copyFiles(_x, _x2, _x3, _x4) {
  return _copyFiles.apply(this, arguments);
}

function _copyFiles() {
  _copyFiles = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(from, dest, pattern, cwd) {
    var files;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0, _filteFiles.default)(pattern, cwd);

          case 2:
            files = _context.sent;
            _context.next = 5;
            return copyFilesOneByOne(from, dest, files);

          case 5:
          case \\"end\\":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _copyFiles.apply(this, arguments);
}"
`;

exports[`tsc node-8.16.0 1`] = `
"\\"use strict\\";

var _interopRequireDefault = require(\\"@babel/runtime/helpers/interopRequireDefault\\");

require(\\"core-js/modules/es.array.iterator\\");

require(\\"core-js/modules/es.promise\\");

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.default = copyFiles;

var _path = _interopRequireDefault(require(\\"path\\"));

var _fsExtra = _interopRequireDefault(require(\\"fs-extra\\"));

var _filteFiles = _interopRequireDefault(require(\\"./filteFiles\\"));

function copyFilesOneByOne(from, dest, files) {
  if (files.length > 0) {
    const [file] = files;

    const destFile = _path.default.resolve(dest, file);

    return _fsExtra.default.ensureDir(_path.default.dirname(destFile)).then(() => _fsExtra.default.copyFile(_path.default.resolve(from, file), destFile)).then(() => copyFilesOneByOne(from, dest, files.slice(1)));
  }

  return Promise.resolve();
}

async function copyFiles(from, dest, pattern, cwd) {
  const files = await (0, _filteFiles.default)(pattern, cwd);
  await copyFilesOneByOne(from, dest, files);
}"
`;

exports[`tsc node-8.16.0-no-esnext 1`] = `
"\\"use strict\\";

require(\\"core-js/modules/es.array.iterator\\");

require(\\"core-js/modules/es.promise\\");

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator[\\"throw\\"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    \\"default\\": mod
  };
};

define([\\"require\\", \\"exports\\", \\"path\\", \\"fs-extra\\", \\"./filteFiles\\"], function (require, exports, path_1, fs_extra_1, filteFiles_1) {
  \\"use strict\\";

  Object.defineProperty(exports, \\"__esModule\\", {
    value: true
  });
  path_1 = __importDefault(path_1);
  fs_extra_1 = __importDefault(fs_extra_1);
  filteFiles_1 = __importDefault(filteFiles_1);

  function copyFilesOneByOne(from, dest, files) {
    if (files.length > 0) {
      const [file] = files;
      const destFile = path_1.default.resolve(dest, file);
      return fs_extra_1.default.ensureDir(path_1.default.dirname(destFile)).then(() => fs_extra_1.default.copyFile(path_1.default.resolve(from, file), destFile)).then(() => copyFilesOneByOne(from, dest, files.slice(1)));
    }

    return Promise.resolve();
  }

  function copyFiles(from, dest, pattern, cwd) {
    return __awaiter(this, void 0, void 0, function* () {
      const files = yield filteFiles_1.default(pattern, cwd);
      yield copyFilesOneByOne(from, dest, files);
    });
  }

  exports.default = copyFiles;
});"
`;

exports[`tsc node-8.16.0-no-esnext 2`] = `
"export default function copyFiles(from: string, dest: string, pattern: string, cwd: string): Promise<void>;
"
`;

exports[`tsc node-12.6.0 1`] = `
"\\"use strict\\";

var _interopRequireDefault = require(\\"@babel/runtime/helpers/interopRequireDefault\\");

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.default = copyFiles;

var _path = _interopRequireDefault(require(\\"path\\"));

var _fsExtra = _interopRequireDefault(require(\\"fs-extra\\"));

var _filteFiles = _interopRequireDefault(require(\\"./filteFiles\\"));

function copyFilesOneByOne(from, dest, files) {
  if (files.length > 0) {
    const [file] = files;

    const destFile = _path.default.resolve(dest, file);

    return _fsExtra.default.ensureDir(_path.default.dirname(destFile)).then(() => _fsExtra.default.copyFile(_path.default.resolve(from, file), destFile)).then(() => copyFilesOneByOne(from, dest, files.slice(1)));
  }

  return Promise.resolve();
}

async function copyFiles(from, dest, pattern, cwd) {
  const files = await (0, _filteFiles.default)(pattern, cwd);
  await copyFilesOneByOne(from, dest, files);
}"
`;

exports[`tsc node-12.6.0 2`] = `
"export default function copyFiles(from: string, dest: string, pattern: string, cwd: string): Promise<void>;
"
`;

exports[`tsc node-12.6.0-no-babel 1`] = `
"var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator[\\"throw\\"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { \\"default\\": mod };
};
define([\\"require\\", \\"exports\\", \\"path\\", \\"fs-extra\\", \\"./filteFiles\\"], function (require, exports, path_1, fs_extra_1, filteFiles_1) {
    \\"use strict\\";
    Object.defineProperty(exports, \\"__esModule\\", { value: true });
    path_1 = __importDefault(path_1);
    fs_extra_1 = __importDefault(fs_extra_1);
    filteFiles_1 = __importDefault(filteFiles_1);
    function copyFilesOneByOne(from, dest, files) {
        if (files.length > 0) {
            const [file] = files;
            const destFile = path_1.default.resolve(dest, file);
            return fs_extra_1.default
                .ensureDir(path_1.default.dirname(destFile))
                .then(() => fs_extra_1.default.copyFile(path_1.default.resolve(from, file), destFile))
                .then(() => copyFilesOneByOne(from, dest, files.slice(1)));
        }
        return Promise.resolve();
    }
    function copyFiles(from, dest, pattern, cwd) {
        return __awaiter(this, void 0, void 0, function* () {
            const files = yield filteFiles_1.default(pattern, cwd);
            yield copyFilesOneByOne(from, dest, files);
        });
    }
    exports.default = copyFiles;
});
"
`;

exports[`tsc node-12.6.0-no-babel 2`] = `
"export default function copyFiles(from: string, dest: string, pattern: string, cwd: string): Promise<void>;
"
`;

exports[`tsc node-12.6.0-no-dts 1`] = `
"\\"use strict\\";

var _interopRequireDefault = require(\\"@babel/runtime/helpers/interopRequireDefault\\");

Object.defineProperty(exports, \\"__esModule\\", {
  value: true
});
exports.default = copyFiles;

var _path = _interopRequireDefault(require(\\"path\\"));

var _fsExtra = _interopRequireDefault(require(\\"fs-extra\\"));

var _filteFiles = _interopRequireDefault(require(\\"./filteFiles\\"));

function copyFilesOneByOne(from, dest, files) {
  if (files.length > 0) {
    const [file] = files;

    const destFile = _path.default.resolve(dest, file);

    return _fsExtra.default.ensureDir(_path.default.dirname(destFile)).then(() => _fsExtra.default.copyFile(_path.default.resolve(from, file), destFile)).then(() => copyFilesOneByOne(from, dest, files.slice(1)));
  }

  return Promise.resolve();
}

async function copyFiles(from, dest, pattern, cwd) {
  const files = await (0, _filteFiles.default)(pattern, cwd);
  await copyFilesOneByOne(from, dest, files);
}"
`;

exports[`tsc node-12.6.0-no-jsx 1`] = `
"import React from \\"react\\";

console.log(\\"utils.button\\");

export function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

export default ({ text: propText }) => {
  const [text, setText] = React.useState(propText);
  React.useEffect(() => {
    setText(propText);
  }, [propText]);

  return <button>{text}</button>;
};
"
`;

exports[`tsc node-12.6.0-no-tsx 1`] = `
"import React from \\"react\\";

console.log(\\"utils.helper.button\\");

export function delay(ms): Promise<void> {
  return new Promise(resolve => setTimeout(resolve, ms));
}

export default ({ text: propText }: { text: string }): React.ReactNode => {
  const [text, setText] = React.useState(propText);
  React.useEffect(() => {
    setText(propText);
  }, [propText]);

  return <button>{text}</button>;
};
"
`;
